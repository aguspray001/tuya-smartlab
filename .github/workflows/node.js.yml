# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: tes
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 12
        uses: actions/setup-node@v3
        with:
          node-version: 12.x
          cache: "npm"

      - name: Install dependencies
      - run: npm i

      - name: Create .env file
      - run: |
          touch .env
          echo PORT=${{ secrets.NODE_PORT }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
          echo DB_USERNAME=${{ secrets.DB_USERNAME }} >> .env
          echo JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} >> .env
          echo NODE_ENV=${{ secrets.NODE_ENV }} >> .env
          echo TUYA_ACCESS_ID=${{ secrets.TUYA_ACCESS_ID }} >> .env
          echo TUYA_ACCESS_SECRET=${{ secrets.TUYA_ACCESS_SECRET }} >> .env
          echo TUYA_BASE_URL=${{ secrets.TUYA_BASE_URL }} >> .env
          echo TUYA_PROJECT_ID=${{ secrets.TUYA_PROJECT_ID }} >> .env
          echo TUYA_VERSION_API=${{ secrets.TUYA_VERSION_API }} >> .env

      - name: Build project 
      - run: npm run build --if-present

  test:
    runs-on: ubuntu-latest
    needs: [build]
    steps: 
      - name: Run test
      - run: npm test
